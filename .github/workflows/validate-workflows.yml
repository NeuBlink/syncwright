name: Validate Workflows

on:
  push:
    paths:
      - '.github/workflows/**'
      - 'action.yml'
      - 'scripts/**'
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'action.yml'
      - 'scripts/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate-yaml:
    name: Validate YAML Syntax
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema

      - name: Validate workflow YAML files
        run: |
          echo "Validating GitHub Actions workflow files..."
          
          for workflow in .github/workflows/*.yml .github/workflows/*.yaml; do
            if [ -f "$workflow" ]; then
              echo "Validating $workflow"
              python3 -c "
              import yaml
              import sys
              try:
                  with open('$workflow', 'r') as f:
                      yaml.safe_load(f)
                  print('✅ $workflow syntax is valid')
              except yaml.YAMLError as e:
                  print(f'❌ $workflow syntax error: {e}')
                  sys.exit(1)
              except Exception as e:
                  print(f'❌ Error processing $workflow: {e}')
                  sys.exit(1)
              "
            fi
          done

      - name: Validate action.yml
        run: |
          echo "Validating action.yml..."
          python3 -c "
          import yaml
          import sys
          try:
              with open('action.yml', 'r') as f:
                  action = yaml.safe_load(f)
              
              # Check required fields
              required_fields = ['name', 'description', 'runs']
              for field in required_fields:
                  if field not in action:
                      print(f'❌ Missing required field: {field}')
                      sys.exit(1)
                  else:
                      print(f'✅ Found required field: {field}')
              
              # Check branding for marketplace
              if 'branding' in action:
                  branding = action['branding']
                  if 'icon' not in branding or 'color' not in branding:
                      print('❌ Branding section incomplete')
                      sys.exit(1)
                  else:
                      print('✅ Branding section complete')
              
              print('✅ action.yml is valid')
          except yaml.YAMLError as e:
              print(f'❌ action.yml syntax error: {e}')
              sys.exit(1)
          except Exception as e:
              print(f'❌ Error processing action.yml: {e}')
              sys.exit(1)
          "

  validate-action-structure:
    name: Validate Action Structure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check action file references
        run: |
          echo "Checking file references in action.yml..."
          
          # Check that referenced scripts exist
          if grep -q "scripts/install.sh" action.yml; then
            if [ ! -f "scripts/install.sh" ]; then
              echo "❌ Referenced script scripts/install.sh not found"
              exit 1
            fi
            if [ ! -x "scripts/install.sh" ]; then
              echo "❌ scripts/install.sh is not executable"
              exit 1
            fi
            echo "✅ scripts/install.sh exists and is executable"
          fi

      - name: Validate composite action steps
        run: |
          echo "Validating composite action steps..."
          
          # Check that all steps have proper shell specification
          if ! grep -q "shell: bash" action.yml; then
            echo "❌ Missing shell specification in composite action"
            exit 1
          fi
          
          # Check for potential security issues
          if grep -q "shell: pwsh" action.yml; then
            echo "⚠️  PowerShell usage detected - ensure it's intentional"
          fi
          
          echo "✅ Composite action structure is valid"

      - name: Check action inputs and outputs
        run: |
          python3 -c "
          import yaml
          import sys
          
          with open('action.yml', 'r') as f:
              action = yaml.safe_load(f)
          
          # Validate inputs
          if 'inputs' in action:
              inputs = action['inputs']
              print(f'Found {len(inputs)} input(s):')
              for input_name, input_def in inputs.items():
                  if 'description' not in input_def:
                      print(f'❌ Input {input_name} missing description')
                      sys.exit(1)
                  print(f'  ✅ {input_name}: {input_def.get(\"description\", \"\")}')
          
          # Validate outputs
          if 'outputs' in action:
              outputs = action['outputs']
              print(f'Found {len(outputs)} output(s):')
              for output_name, output_def in outputs.items():
                  if 'description' not in output_def:
                      print(f'❌ Output {output_name} missing description')
                      sys.exit(1)
                  print(f'  ✅ {output_name}: {output_def.get(\"description\", \"\")}')
          
          print('✅ Action inputs/outputs are properly defined')
          "

  validate-workflow-permissions:
    name: Validate Workflow Permissions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check workflow permissions
        run: |
          echo "Checking workflow permissions..."
          
          # Check for overly broad permissions
          for workflow in .github/workflows/*.yml; do
            echo "Checking permissions in $workflow"
            
            if grep -q "permissions:" "$workflow"; then
              # Check for write-all permission
              if grep -A 10 "permissions:" "$workflow" | grep -q "write-all"; then
                echo "⚠️  Warning: $workflow uses write-all permissions"
              fi
              
              # Check for contents: write without specific need
              if grep -A 10 "permissions:" "$workflow" | grep -q "contents: write"; then
                if ! grep -q "release\|tag\|commit" "$workflow"; then
                  echo "⚠️  Warning: $workflow has contents: write but may not need it"
                fi
              fi
              
              echo "✅ Permissions in $workflow reviewed"
            else
              echo "ℹ️  No explicit permissions in $workflow (using defaults)"
            fi
          done

  validate-secrets-usage:
    name: Validate Secrets Usage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check secrets usage
        run: |
          echo "Checking secrets usage in workflows..."
          
          # Find all secret references
          secret_refs=$(grep -r "secrets\." .github/workflows/ || true)
          
          if [ -n "$secret_refs" ]; then
            echo "Found secret references:"
            echo "$secret_refs" | while read -r line; do
              echo "  $line"
              
              # Check for common security issues
              if echo "$line" | grep -q "secrets\.GITHUB_TOKEN"; then
                echo "    ✅ Using built-in GITHUB_TOKEN"
              elif echo "$line" | grep -q "secrets\..*_TOKEN"; then
                echo "    ⚠️  Using external token - ensure it's necessary"
              fi
            done
          else
            echo "No secret references found"
          fi

  validate-action-marketplace:
    name: Validate Marketplace Readiness
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check marketplace requirements
        run: |
          echo "Checking GitHub Marketplace requirements..."
          
          # Check required files
          required_files=("README.md" "LICENSE" "action.yml")
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            else
              echo "✅ Found required file: $file"
            fi
          done

      - name: Validate action metadata
        run: |
          python3 -c "
          import yaml
          import sys
          
          with open('action.yml', 'r') as f:
              action = yaml.safe_load(f)
          
          # Check marketplace-specific requirements
          marketplace_fields = {
              'name': 'Action name',
              'description': 'Action description',
              'author': 'Action author',
              'branding': 'Branding information'
          }
          
          for field, description in marketplace_fields.items():
              if field not in action:
                  print(f'❌ Missing {description} ({field})')
                  sys.exit(1)
              else:
                  print(f'✅ Found {description}')
          
          # Validate branding
          branding = action.get('branding', {})
          if 'icon' not in branding:
              print('❌ Missing branding icon')
              sys.exit(1)
          if 'color' not in branding:
              print('❌ Missing branding color')
              sys.exit(1)
          
          print('✅ Action is marketplace-ready')
          "

      - name: Check README for action usage
        run: |
          echo "Checking README for action usage examples..."
          
          if ! grep -q "uses:.*syncwright" README.md; then
            echo "⚠️  Warning: README should include action usage examples"
          else
            echo "✅ README includes action usage examples"
          fi

  test-workflow-syntax:
    name: Test Workflow Syntax with act
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup act (GitHub Actions runner)
        run: |
          curl https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash

      - name: Test workflow syntax with act
        run: |
          echo "Testing workflow syntax with act..."
          
          # Test that workflows can be parsed (dry run)
          for workflow in .github/workflows/*.yml; do
            workflow_name=$(basename "$workflow" .yml)
            echo "Testing $workflow_name"
            
            # Use act to validate the workflow syntax
            if act -n -W "$workflow" --list >/dev/null 2>&1; then
              echo "✅ $workflow_name syntax is valid"
            else
              echo "❌ $workflow_name has syntax issues"
              exit 1
            fi
          done

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for security issues
        run: |
          echo "Scanning workflows for security issues..."
          
          # Check for potential script injection vulnerabilities
          if grep -r "github.event" .github/workflows/ | grep -v "github.event.inputs"; then
            echo "⚠️  Warning: Direct use of github.event data detected"
            echo "    Consider validating or sanitizing user inputs"
          fi
          
          # Check for secrets in plain text
          if grep -ri "password\|token\|key" .github/workflows/ | grep -v "secrets\."; then
            echo "⚠️  Warning: Potential hardcoded secrets detected"
          fi
          
          # Check for downloads from HTTP (should be HTTPS)
          if grep -r "http://" .github/workflows/; then
            echo "⚠️  Warning: HTTP downloads detected (should use HTTPS)"
          fi
          
          echo "✅ Security scan completed"

  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-yaml, validate-action-structure, validate-workflow-permissions, validate-secrets-usage, validate-action-marketplace, test-workflow-syntax, security-scan]
    if: always()
    steps:
      - name: Generate validation summary
        run: |
          echo "## 🔍 Workflow Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| YAML Syntax | ${{ needs.validate-yaml.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Action Structure | ${{ needs.validate-action-structure.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow Permissions | ${{ needs.validate-workflow-permissions.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secrets Usage | ${{ needs.validate-secrets-usage.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Marketplace Readiness | ${{ needs.validate-action-marketplace.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow Syntax Test | ${{ needs.test-workflow-syntax.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall status
          if [[ "${{ needs.validate-yaml.result }}" == "success" && 
                "${{ needs.validate-action-structure.result }}" == "success" && 
                "${{ needs.validate-action-marketplace.result }}" == "success" ]]; then
            echo "✅ **All validations passed** - Workflows are ready for production" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some validations failed** - Please review the job details above" >> $GITHUB_STEP_SUMMARY
          fi