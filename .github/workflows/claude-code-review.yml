name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check Claude Code Setup
        id: check-setup
        run: |
          if [ -z "${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" ]; then
            echo "⚠️ CLAUDE_CODE_OAUTH_TOKEN secret not found"
            echo "Please add the Claude Code OAuth token to repository secrets"
            echo "Visit https://github.com/apps/claude to install the Claude Code GitHub App"
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "reason=missing_token" >> $GITHUB_OUTPUT
          else
            echo "✅ Claude Code OAuth token found"
            # Test if Claude Code GitHub App is installed by attempting OIDC token exchange
            # This is a simplified check - in practice the full action will do this properly
            echo "⚠️ Claude Code OAuth token exists but GitHub App may not be installed"
            echo "If this step fails, install the Claude Code GitHub App at https://github.com/apps/claude"
            echo "ready=true" >> $GITHUB_OUTPUT
            echo "reason=token_found" >> $GITHUB_OUTPUT
          fi

      - name: Run Claude Code Review
        id: claude-review
        if: steps.check-setup.outputs.ready == 'true'
        continue-on-error: true
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging 
          #   and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and 
          #   best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

      - name: Handle Claude Code Issues  
        if: always() && (steps.check-setup.outputs.ready == 'false' || steps.claude-review.outcome == 'failure')
        uses: actions/github-script@v7
        with:
          script: |
            let message = '';
            
            if ('${{ steps.check-setup.outputs.reason }}' === 'missing_token') {
              message = `## ⚠️ Claude Code Setup Required
            
            The Claude Code review workflow is configured but missing required setup:
            
            1. **Install the Claude Code GitHub App**: Visit https://github.com/apps/claude
            2. **Add OAuth Token**: Add \`CLAUDE_CODE_OAUTH_TOKEN\` to repository secrets
            
            Once configured, Claude Code will automatically review pull requests and respond to @claude mentions.`;
            } else if ('${{ steps.claude-review.outcome }}' === 'failure') {
              message = `## ⚠️ Claude Code App Installation Required
            
            The Claude Code OAuth token is configured, but the GitHub App is not installed on this repository.
            
            **To fix this:**
            1. Visit https://github.com/apps/claude
            2. Install the Claude Code GitHub App for this repository
            3. The workflow will then work automatically
            
            The CI failure is expected until the app is installed.`;
            }
            
            if (message) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }

      - name: Claude Code Review Status
        if: always()
        run: |
          if [ "${{ steps.check-setup.outputs.ready }}" = "false" ]; then
            echo "ℹ️ Claude Code review skipped: Setup required"
            exit 0
          elif [ "${{ steps.claude-review.outcome }}" = "failure" ]; then
            echo "ℹ️ Claude Code review failed: GitHub App not installed (expected)"
            echo "This is not a blocking failure - the PR can still be merged"
            exit 0
          else
            echo "✅ Claude Code review completed successfully"
            exit 0
          fi

