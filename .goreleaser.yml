# GoReleaser configuration for Syncwright
# https://goreleaser.com/customization/

version: 2

before:
  hooks:
    # Clean up any previous builds
    - go clean
    - go mod tidy
    # Generate any code if needed
    - go generate ./...

builds:
  - id: syncwright
    main: ./cmd/syncwright
    binary: syncwright
    
    # Target environments
    goos:
      - linux
      - darwin
      - windows
      
    goarch:
      - amd64
      - arm64
      - "386"
      - arm
      
    goarm:
      - "6"
      - "7"
    
    # Ignore specific combinations
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
        
    # Build flags
    flags:
      - -trimpath
      
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
      
    # Environment variables for build
    env:
      - CGO_ENABLED=0

archives:
  - id: default
    format: tar.gz
    
    # Use zip for Windows
    format_overrides:
      - goos: windows
        format: zip
        
    # Archive name template
    name_template: >-
      {{ .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
      
    # Files to include in archive
    files:
      - LICENSE
      - README.md
      - USAGE.md
      
    # Wrap in directory
    wrap_in_directory: false

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next-{{.Commit}}"

changelog:
  # Changelog configuration
  sort: asc
  use: github
  
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^build:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge branch
      - go mod tidy
      
  groups:
    - title: 'New Features'
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
      
    - title: 'Bug Fixes'
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
      
    - title: 'Performance Improvements'
      regexp: '^.*?perf(\(.+\))??!?:.+$'
      order: 2
      
    - title: 'Documentation Updates'
      regexp: '^.*?docs(\(.+\))??!?:.+$'
      order: 3
      
    - title: 'Other Changes'
      order: 999

release:
  # GitHub release configuration
  github:
    owner: neublink
    name: syncwright
    
  # Release name template
  name_template: "{{.ProjectName}} v{{.Version}}"
  
  # Create release as draft initially
  draft: false
  
  # Mark as prerelease if version contains alpha, beta, rc
  prerelease: auto
  
  # Release mode
  mode: replace
  
  # Header and footer for release notes
  header: |
    ## Syncwright {{.Tag}}
    
    Welcome to this new release of Syncwright! üéâ
    
    ### Installation
    
    #### Download Pre-built Binaries
    
    Download the appropriate binary for your platform from the assets below.
    
    #### Install Script
    
    ```bash
    curl -fsSL https://raw.githubusercontent.com/neublink/syncwright/main/scripts/install.sh | bash
    ```
    
    #### Go Install
    
    ```bash
    go install github.com/neublink/syncwright/cmd/syncwright@{{.Tag}}
    ```
    
    #### GitHub Action
    
    ```yaml
    - uses: neublink/syncwright@{{.Tag}}
      with:
        claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
    ```
    
    ---
    
  footer: |
    ---
    
    ### What's Next?
    
    - üìñ Check out the [documentation](https://github.com/neublink/syncwright/blob/main/README.md)
    - üêõ Report issues on [GitHub Issues](https://github.com/neublink/syncwright/issues)
    - üí¨ Join the discussion in [GitHub Discussions](https://github.com/neublink/syncwright/discussions)
    
    **Full Changelog**: https://github.com/neublink/syncwright/compare/{{.PreviousTag}}...{{.Tag}}

# Universal Binaries for macOS
universal_binaries:
  - id: syncwright-universal
    replace: true
    name_template: 'syncwright'
    
brews:
  - name: syncwright
    repository:
      owner: neublink
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
      
    # Git author for commits
    commit_author:
      name: syncwright-bot
      email: syncwright-bot@users.noreply.github.com
      
    # Commit message template
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    
    # Formula folder
    folder: Formula
    
    # Caveats
    caveats: |
      Syncwright is now installed! üéâ
      
      To get started:
        syncwright --help
      
      For AI-powered conflict resolution, set up your Claude Code OAuth token:
        export CLAUDE_CODE_OAUTH_TOKEN="your-token-here"
      
      Visit https://github.com/neublink/syncwright for documentation.
      
    # Formula description
    description: "AI-powered Git merge conflict resolution tool"
    homepage: "https://github.com/neublink/syncwright"
    
    # License
    license: "MIT"
    
    # Dependencies
    dependencies:
      - name: git
        type: runtime
        
    # Test
    test: |
      system "#{bin}/syncwright --version"

# Windows packages
winget:
  - name: syncwright
    publisher: neublink
    short_description: "AI-powered Git merge conflict resolution"
    license: "MIT"
    homepage: "https://github.com/neublink/syncwright"
    repository:
      owner: neublink
      name: winget-pkgs
      branch: syncwright-{{.Version}}
      token: "{{ .Env.WINGET_GITHUB_TOKEN }}"
      pull_request:
        enabled: true
        draft: false
        base:
          owner: microsoft
          name: winget-pkgs
          branch: main

# Linux packages (DEB and RPM)
nfpms:
  - id: packages
    package_name: syncwright
    
    # Vendor
    vendor: neublink
    homepage: https://github.com/neublink/syncwright
    maintainer: Syncwright Team <syncwright@neublink.com>
    
    # Description
    description: |-
      Syncwright is an AI-powered Git merge conflict resolution tool that
      automatically detects, analyzes, and resolves merge conflicts using
      advanced language models.
      
    # License
    license: MIT
    
    # Formats
    formats:
      - deb
      - rpm
      - apk
      
    # Dependencies
    dependencies:
      - git
      
    # Recommends
    recommends:
      - curl
      
    # File mappings
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/syncwright/LICENSE
        
      - src: ./README.md
        dst: /usr/share/doc/syncwright/README.md
        
      - src: ./scripts/install.sh
        dst: /usr/share/syncwright/install.sh
        file_info:
          mode: 0755

# Docker images
dockers:
  - id: syncwright
    goos: linux
    goarch: amd64
    
    # Image name
    image_templates:
      - "ghcr.io/neublink/syncwright:latest"
      - "ghcr.io/neublink/syncwright:v{{ .Major }}"
      - "ghcr.io/neublink/syncwright:v{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/neublink/syncwright:{{ .Tag }}"
      
    # Dockerfile template
    dockerfile: |
      FROM alpine:3.19
      RUN apk add --no-cache ca-certificates git curl
      COPY syncwright /usr/local/bin/
      ENTRYPOINT ["/usr/local/bin/syncwright"]
      
    # Build flags
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"

# Snapcraft
snapcrafts:
  - name: syncwright
    title: Syncwright
    summary: AI-powered Git merge conflict resolution
    description: |
      Syncwright is an AI-powered Git merge conflict resolution tool that
      automatically detects, analyzes, and resolves merge conflicts using
      advanced language models.
      
    # Grade and confinement
    grade: stable
    confinement: strict
    
    # License
    license: MIT
    
    # Base
    base: core22
    
    # Apps
    apps:
      syncwright:
        command: syncwright
        plugs: ["home", "network", "network-bind"]

# SBOMs
sboms:
  - artifacts: archive
  - id: source
    artifacts: source

# Signs
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - --yes
    artifacts: checksum
    output: true

# Artifacts
dist: dist

# Metadata
metadata:
  mod_timestamp: '{{ .CommitTimestamp }}'

# Announce
announce:
  # Skip announce for now
  skip: true